# app.py

import os
import sys
import threading
from flask import Flask, render_template, request, jsonify

# ======================================================================
# PH·∫¶N 1: THI·∫æT L·∫¨P M√îI TR∆Ø·ªúNG & KH·ªûI T·∫†O CHATBOT
# ======================================================================

# Th√™m th∆∞ m·ª•c g·ªëc v√†o Python path ƒë·ªÉ c√≥ th·ªÉ import t·ª´ 'src'
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# Khai b√°o c√°c bi·∫øn to√†n c·ª•c ƒë·ªÉ qu·∫£n l√Ω tr·∫°ng th√°i chatbot
app_state = {
    "chatbot_instance": None,
    "chatbot_error": None,
    "is_initializing": True,
}

def initialize_chatbot():
    """T·∫£i model trong m·ªôt lu·ªìng ri√™ng ƒë·ªÉ kh√¥ng ch·∫∑n server Flask."""
    global app_state
    print("="*60)
    print("ü§ñ B·∫Øt ƒë·∫ßu kh·ªüi t·∫°o AniBot trong lu·ªìng ri√™ng...")
    print("   (Qu√° tr√¨nh n√†y c√≥ th·ªÉ m·∫•t v√†i ph√∫t ƒë·ªÉ t·∫£i model v√†o VRAM)")
    
    try:
        from src.chat_bot import Chatbot
        chatbot = Chatbot(
            config_path='config/config.yaml',
            model_config_path='config/model_config.json'
        )
        app_state["chatbot_instance"] = chatbot
        print("‚úÖ AniBot ƒë√£ s·∫µn s√†ng ph·ª•c v·ª•!")
        print("="*60)
    except Exception as e:
        print(f"\n‚ùå L·ªñI NGHI√äM TR·ªåNG KHI KH·ªûI T·∫†O CHATBOT: {e}\n")
        import traceback
        traceback.print_exc()
        app_state["chatbot_error"] = str(e)
    finally:
        app_state["is_initializing"] = False

# ======================================================================
# PH·∫¶N 2: KH·ªûI T·∫†O ·ª®NG D·ª§NG FLASK V√Ä C√ÅC ROUTE
# ======================================================================

app = Flask(__name__)
app.config['JSON_AS_ASCII'] = False # H·ªó tr·ª£ ti·∫øng Vi·ªát

@app.route("/")
def home():
    """Route ƒë·ªÉ hi·ªÉn th·ªã trang chat ch√≠nh (templates/index.html)."""
    return render_template("index.html")

@app.route("/chat", methods=["POST"])
def chat():
    """API endpoint ƒë·ªÉ nh·∫≠n c√¢u h·ªèi v√† tr·∫£ v·ªÅ c√¢u tr·∫£ l·ªùi."""
    # Ki·ªÉm tra tr·∫°ng th√°i c·ªßa chatbot
    if app_state["is_initializing"]:
        return jsonify({"answer": "‚è≥ Xin l·ªói, AniBot v·∫´n ƒëang kh·ªüi ƒë·ªông. Vui l√≤ng ch·ªù m·ªôt ch√∫t r·ªìi th·ª≠ l·∫°i..."}), 503
    
    if app_state["chatbot_error"]:
        return jsonify({"answer": f"‚ùå ƒê√£ x·∫£y ra l·ªói nghi√™m tr·ªçng khi kh·ªüi ƒë·ªông Bot: {app_state['chatbot_error']}"}), 500
        
    data = request.json
    user_message = data.get("message")
    chat_history = data.get("history", [])
    
    if not user_message:
        return jsonify({"error": "Kh√¥ng c√≥ tin nh·∫Øn n√†o ƒë∆∞·ª£c cung c·∫•p."}), 400

    try:
        bot_response = app_state["chatbot_instance"].answer(user_message, chat_history)
        return jsonify({"answer": bot_response})
    except Exception as e:
        print(f"L·ªói khi x·ª≠ l√Ω c√¢u h·ªèi '{user_message}': {e}")
        return jsonify({"answer": "R·∫•t xin l·ªói, ƒë√£ c√≥ s·ª± c·ªë x·∫£y ra khi t√¥i ƒëang x·ª≠ l√Ω c√¢u h·ªèi c·ªßa b·∫°n."}), 500

# ======================================================================
# PH·∫¶N 3: CH·∫†Y SERVER
# ======================================================================

if __name__ == "__main__":
    print("üöÄ B·∫Øt ƒë·∫ßu kh·ªüi ch·∫°y server Flask cho AniBot...")
    
    # 1. Kh·ªüi t·∫°o chatbot trong m·ªôt lu·ªìng ri√™ng
    chatbot_thread = threading.Thread(target=initialize_chatbot)
    chatbot_thread.daemon = True
    chatbot_thread.start()

    # 2. C·∫•u h√¨nh c·ªïng v√† ch·∫°y Flask app
    port = 5000
    print("="*60)
    print(f"üè† Giao di·ªán web s·∫Ω c√≥ t·∫°i:")
    print(f"üëâ http://127.0.0.1:{port}")
    print("   (Vui l√≤ng ch·ªù th√¥ng b√°o 'AniBot ƒë√£ s·∫µn s√†ng' tr∆∞·ªõc khi truy c·∫≠p)")
    print("="*60)
    
    # Ch·∫°y server, debug=False l√† quan tr·ªçng
    app.run(host='0.0.0.0', port=7860, debug=False)
